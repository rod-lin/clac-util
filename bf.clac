: // Brainf**k in clac ;
: ! requires mem.clac ;

: bf-const-mem-size 128 ;

: // for convenient all instructions are represented by numbers now ;
: //
    ---------------------------------------------------
    |  mem: 128 int  |  program: pn  | pn: 1 | ptr: 1 |
    ---------------------------------------------------
    (pn for program size)
;

: // rel-addr n ofs (n is the stack size after ptr not including rel-addr and n) ;
: ofs dup 4 + pick + + 2 + ;

: ( ;
: ) ;
: == - if 0 1 skip 1 ;

: bf-edit 0 ;
: >, 1 + 1 swap ;
: <, 1 + 2 swap ;
: +, 1 + 3 swap ;
: -, 1 + 4 swap ;
: ., 1 + 5 swap ;
: ,, 1 + 6 swap ;
: [, 1 + 7 swap ;
: ], 1 + 8 swap ;

: .> 1 + ;
: .< 1 - ;
: .+ dup ( dup 1 ofs ) mread 1 + swap 1 ofs 2 pick mwrite drop ;
: .- dup ( dup 1 ofs ) mread 1 - swap 1 ofs 2 pick mwrite drop ;

: // n abs-addr bf-find-match-cb - n is the number of [ found ;
: bf-find-loop-end-recur 1 - bf-find-loop-end-cb ;
: bf-find-loop-end-inc drop swap 1 + swap bf-find-loop-end-recur ;
: bf-find-loop-end-dec swap 1 - dup 0 == if drop 2 skip swap bf-find-loop-end-recur ;
: bf-find-loop-end-cb dup mread dup 7 == if bf-find-loop-end-inc 7 skip 8 == if bf-find-loop-end-dec 1 skip bf-find-loop-end-recur ;
: // abs-addr bf-find-match - giving a address containing 7, find the matching 8 ;
: bf-find-loop-end 2 + 0 swap bf-find-loop-end-cb 2 - ;

: bf-init
    bf-const-mem-size malloc
;

: // push the pointer to stack ;
: bf-run
    0
;

: bf-dev bf-init bf-edit bf-run ;
